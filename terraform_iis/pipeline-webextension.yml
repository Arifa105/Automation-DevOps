trigger:
- master
 
pool:
  name: Default
 
steps:
- task: TerraformInstaller@1
  displayName: terraform install
  inputs:
    terraformVersion: 'latest'
 
- task: TerraformTaskV4@4
  displayName: tf init
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'ServiceTest'
    backendAzureRmResourceGroupName: 'st-rg001'
    backendAzureRmStorageAccountName: 'webiisstrg'
    backendAzureRmContainerName: 'prod-tfstate'
    backendAzureRmKey: 'prod.terraform.tfstate'
    env:
    TF_LOG: DEBUG
  
- task: TerraformTaskV4@4
  displayName: tf validate
  inputs:
    provider: 'azurerm'
    command: 'validate'
 
- task: TerraformTaskV4@4
  displayName: tf plan
  inputs:
    provider: 'azurerm'
    command: 'plan'
    environmentServiceNameAzureRM: 'ServiceTest'
    args: '-out=tfplan'  # Save the plan to a file
    
- task: TerraformTaskV4@4
  displayName: tf apply
  inputs:
    provider: 'azurerm'
    command: 'apply'
    environmentServiceNameAzureRM: 'ServiceTest'
    args: '-auto-approve'  # Automatically approve the apply
    
- task: ArchiveFiles@2
  displayName: Archieve Files
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true
    
- task: PublishBuildArtifacts@1
  displayName: Publish BuildId
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: '$(Build.BuildId)-build'
    publishLocation: 'Container'